// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filename.proto

package atlas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Filename represents abstract filename.
type Filename struct {
	// Filename
	Filename             string   `protobuf:"bytes,100,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filename) Reset()      { *m = Filename{} }
func (*Filename) ProtoMessage() {}
func (*Filename) Descriptor() ([]byte, []int) {
	return fileDescriptor_86d7d3994edf5d29, []int{0}
}

func (m *Filename) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filename.Unmarshal(m, b)
}
func (m *Filename) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filename.Marshal(b, m, deterministic)
}
func (m *Filename) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filename.Merge(m, src)
}
func (m *Filename) XXX_Size() int {
	return xxx_messageInfo_Filename.Size(m)
}
func (m *Filename) XXX_DiscardUnknown() {
	xxx_messageInfo_Filename.DiscardUnknown(m)
}

var xxx_messageInfo_Filename proto.InternalMessageInfo

func (m *Filename) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func init() {
	proto.RegisterType((*Filename)(nil), "atlas.Filename")
}

func init() { proto.RegisterFile("filename.proto", fileDescriptor_86d7d3994edf5d29) }

var fileDescriptor_86d7d3994edf5d29 = []byte{
	// 74 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xcb, 0xcc, 0x49,
	0xcd, 0x4b, 0xcc, 0x4d, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0x2c, 0xc9, 0x49,
	0x2c, 0x56, 0x52, 0xe3, 0xe2, 0x70, 0x83, 0x4a, 0x08, 0x49, 0x71, 0x71, 0xc0, 0x14, 0x49, 0xa4,
	0x28, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xf9, 0x49, 0x6c, 0x60, 0x5d, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x28, 0x5f, 0x74, 0x45, 0x47, 0x00, 0x00, 0x00,
}
