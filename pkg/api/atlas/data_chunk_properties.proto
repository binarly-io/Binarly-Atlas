// Copyright 2020 The Atlas Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * Metadata defines all possible metadata for objects.
 * For example, for stream of dataChunks, is used to represent:
 *   - chunk header,
 *   - data descriptions,
 *   - data encoding descriptions,
 *   - etc.
 * Can also be used as metadata description for any other objects.
 * Since protobuf has ability not to send 'optional' fields, metadata can have full set of fields, describing
 * all possible metadata options and have only few of them which are really used sent to the correspondent.
 */
syntax = "proto3";

package atlas;

import "digest.proto";

message DataChunkProperties {
    oneof digest_optional {
        // Optional. Digest represents digest of the object.
        Digest digest = 100;
    }

    oneof len_optional {
        // Optional. Len represents length of the object.
        int64 len = 200;
    }

    oneof offset_optional {
        // Optional. Offset represents offset of the object within the stream.
        int64 offset = 300;
    }

    oneof last_optional {
        // Optional. Last identifies last object within the stream.
        bool last = 400;
    }
}
