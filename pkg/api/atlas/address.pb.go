// Code generated by protoc-gen-go. DO NOT EDIT.
// source: address.proto

package atlas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Address describes general address
type Address struct {
	// Types that are valid to be assigned to DomainOptional:
	//	*Address_ExplicitDomain
	DomainOptional isAddress_DomainOptional `protobuf_oneof:"domain_optional"`
	// Types that are valid to be assigned to AddressOptional:
	//	*Address_S3
	//	*Address_Kafka
	//	*Address_Digest
	//	*Address_Uuid
	//	*Address_UserId
	//	*Address_Dirname
	//	*Address_Filename
	//	*Address_Url
	//	*Address_Domain
	//	*Address_CustomString
	AddressOptional      isAddress_AddressOptional `protobuf_oneof:"address_optional"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Address) Reset()      { *m = Address{} }
func (*Address) ProtoMessage() {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_982c640dad8fe78e, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

type isAddress_DomainOptional interface {
	isAddress_DomainOptional()
}

type Address_ExplicitDomain struct {
	ExplicitDomain *Domain `protobuf:"bytes,10,opt,name=explicit_domain,json=explicitDomain,proto3,oneof"`
}

func (*Address_ExplicitDomain) isAddress_DomainOptional() {}

func (m *Address) GetDomainOptional() isAddress_DomainOptional {
	if m != nil {
		return m.DomainOptional
	}
	return nil
}

func (m *Address) GetExplicitDomain() *Domain {
	if x, ok := m.GetDomainOptional().(*Address_ExplicitDomain); ok {
		return x.ExplicitDomain
	}
	return nil
}

type isAddress_AddressOptional interface {
	isAddress_AddressOptional()
}

type Address_S3 struct {
	S3 *S3Address `protobuf:"bytes,100,opt,name=s3,proto3,oneof"`
}

type Address_Kafka struct {
	Kafka *KafkaAddress `protobuf:"bytes,200,opt,name=kafka,proto3,oneof"`
}

type Address_Digest struct {
	Digest *Digest `protobuf:"bytes,300,opt,name=digest,proto3,oneof"`
}

type Address_Uuid struct {
	Uuid *UUID `protobuf:"bytes,400,opt,name=uuid,proto3,oneof"`
}

type Address_UserId struct {
	UserId *UserID `protobuf:"bytes,500,opt,name=user_id,json=userId,proto3,oneof"`
}

type Address_Dirname struct {
	Dirname *Dirname `protobuf:"bytes,600,opt,name=dirname,proto3,oneof"`
}

type Address_Filename struct {
	Filename *Filename `protobuf:"bytes,700,opt,name=filename,proto3,oneof"`
}

type Address_Url struct {
	Url *URL `protobuf:"bytes,800,opt,name=url,proto3,oneof"`
}

type Address_Domain struct {
	Domain *Domain `protobuf:"bytes,900,opt,name=domain,proto3,oneof"`
}

type Address_CustomString struct {
	CustomString string `protobuf:"bytes,1000,opt,name=custom_string,json=customString,proto3,oneof"`
}

func (*Address_S3) isAddress_AddressOptional() {}

func (*Address_Kafka) isAddress_AddressOptional() {}

func (*Address_Digest) isAddress_AddressOptional() {}

func (*Address_Uuid) isAddress_AddressOptional() {}

func (*Address_UserId) isAddress_AddressOptional() {}

func (*Address_Dirname) isAddress_AddressOptional() {}

func (*Address_Filename) isAddress_AddressOptional() {}

func (*Address_Url) isAddress_AddressOptional() {}

func (*Address_Domain) isAddress_AddressOptional() {}

func (*Address_CustomString) isAddress_AddressOptional() {}

func (m *Address) GetAddressOptional() isAddress_AddressOptional {
	if m != nil {
		return m.AddressOptional
	}
	return nil
}

func (m *Address) GetS3() *S3Address {
	if x, ok := m.GetAddressOptional().(*Address_S3); ok {
		return x.S3
	}
	return nil
}

func (m *Address) GetKafka() *KafkaAddress {
	if x, ok := m.GetAddressOptional().(*Address_Kafka); ok {
		return x.Kafka
	}
	return nil
}

func (m *Address) GetDigest() *Digest {
	if x, ok := m.GetAddressOptional().(*Address_Digest); ok {
		return x.Digest
	}
	return nil
}

func (m *Address) GetUUID() *UUID {
	if x, ok := m.GetAddressOptional().(*Address_Uuid); ok {
		return x.Uuid
	}
	return nil
}

func (m *Address) GetUserId() *UserID {
	if x, ok := m.GetAddressOptional().(*Address_UserId); ok {
		return x.UserId
	}
	return nil
}

func (m *Address) GetDirname() *Dirname {
	if x, ok := m.GetAddressOptional().(*Address_Dirname); ok {
		return x.Dirname
	}
	return nil
}

func (m *Address) GetFilename() *Filename {
	if x, ok := m.GetAddressOptional().(*Address_Filename); ok {
		return x.Filename
	}
	return nil
}

func (m *Address) GetUrl() *URL {
	if x, ok := m.GetAddressOptional().(*Address_Url); ok {
		return x.Url
	}
	return nil
}

func (m *Address) GetDomain() *Domain {
	if x, ok := m.GetAddressOptional().(*Address_Domain); ok {
		return x.Domain
	}
	return nil
}

func (m *Address) GetCustomString() string {
	if x, ok := m.GetAddressOptional().(*Address_CustomString); ok {
		return x.CustomString
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Address) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Address_ExplicitDomain)(nil),
		(*Address_S3)(nil),
		(*Address_Kafka)(nil),
		(*Address_Digest)(nil),
		(*Address_Uuid)(nil),
		(*Address_UserId)(nil),
		(*Address_Dirname)(nil),
		(*Address_Filename)(nil),
		(*Address_Url)(nil),
		(*Address_Domain)(nil),
		(*Address_CustomString)(nil),
	}
}

func init() {
	proto.RegisterType((*Address)(nil), "atlas.Address")
}

func init() { proto.RegisterFile("address.proto", fileDescriptor_982c640dad8fe78e) }

var fileDescriptor_982c640dad8fe78e = []byte{
	// 394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4d, 0xae, 0xd3, 0x30,
	0x10, 0x80, 0x71, 0x7f, 0x12, 0x3a, 0x6d, 0xda, 0xe2, 0x6e, 0xac, 0x6e, 0x40, 0x5d, 0xa0, 0x22,
	0x50, 0x16, 0x64, 0xc3, 0x96, 0xaa, 0x42, 0xae, 0x60, 0xe5, 0xaa, 0xeb, 0xc8, 0xd4, 0x69, 0x65,
	0x35, 0x4d, 0x2a, 0x3b, 0x91, 0x38, 0x00, 0xec, 0x39, 0x02, 0x07, 0xe0, 0x08, 0x1c, 0x80, 0x23,
	0x70, 0x04, 0x0e, 0xc0, 0x01, 0x50, 0xc6, 0x4e, 0xdf, 0xeb, 0xd3, 0xdb, 0xc5, 0xdf, 0x7c, 0x33,
	0x99, 0x19, 0x1b, 0x22, 0xa9, 0x94, 0xc9, 0xac, 0x8d, 0x2f, 0xa6, 0xac, 0x4a, 0xda, 0x97, 0x55,
	0x2e, 0xed, 0x7c, 0xa4, 0xf4, 0x31, 0xb3, 0x95, 0x83, 0xf3, 0x48, 0x69, 0x53, 0xc8, 0x73, 0xe6,
	0x8f, 0x23, 0x55, 0x9e, 0xa5, 0x2e, 0xfc, 0x69, 0x7c, 0xd0, 0x79, 0x76, 0x2f, 0x3a, 0x3b, 0xc9,
	0xc3, 0x49, 0xa6, 0x37, 0x65, 0xe7, 0x53, 0x9b, 0x3c, 0x20, 0x83, 0xda, 0xe4, 0x6d, 0xf9, 0xda,
	0x66, 0x26, 0xd5, 0xca, 0x1f, 0xa1, 0xae, 0xdb, 0xef, 0xc5, 0xb7, 0x1e, 0x84, 0xef, 0x5d, 0x1e,
	0x7d, 0x07, 0x93, 0xec, 0xcb, 0x25, 0xd7, 0x7b, 0x5d, 0xa5, 0xae, 0x03, 0x06, 0x2f, 0xc8, 0x72,
	0xf8, 0x36, 0x8a, 0xb1, 0xe9, 0x78, 0x8d, 0x90, 0x3f, 0x11, 0xe3, 0xd6, 0x73, 0x84, 0x2e, 0xa0,
	0x63, 0x13, 0xa6, 0x50, 0x9e, 0x7a, 0x79, 0x9b, 0xf8, 0xba, 0x9c, 0x88, 0x8e, 0x4d, 0xe8, 0x1b,
	0xe8, 0x63, 0xe3, 0xec, 0x37, 0x41, 0x6f, 0xe6, 0xbd, 0x8f, 0x0d, 0xbc, 0x53, 0x9d, 0x44, 0x97,
	0x10, 0xb8, 0x0d, 0xb1, 0x9f, 0x9d, 0xdb, 0x1e, 0x90, 0x72, 0x22, 0x7c, 0x9c, 0x2e, 0xa0, 0xd7,
	0xcc, 0xc3, 0xbe, 0x77, 0xd1, 0x1b, 0x7a, 0x6f, 0xb7, 0xdb, 0xac, 0x39, 0x11, 0x18, 0xa3, 0xaf,
	0x20, 0xf4, 0x2b, 0x60, 0xff, 0xba, 0x37, 0xe5, 0x76, 0x36, 0x33, 0x28, 0x06, 0x8d, 0xb0, 0x51,
	0xf4, 0x35, 0x84, 0xfe, 0x32, 0xd8, 0x9f, 0x1e, 0xaa, 0xe3, 0xeb, 0x9f, 0x11, 0x73, 0x22, 0x5a,
	0x83, 0xc6, 0xf0, 0xb4, 0xbd, 0x1c, 0xf6, 0xab, 0x8f, 0xf6, 0xc4, 0xdb, 0x1f, 0x3c, 0xe7, 0x44,
	0x5c, 0x1d, 0xfa, 0x1c, 0xba, 0xb5, 0xc9, 0xd9, 0x8f, 0x00, 0x55, 0x68, 0x7b, 0x10, 0x9f, 0x38,
	0x11, 0x4d, 0x04, 0xc7, 0x76, 0x9b, 0xff, 0x1a, 0x3e, 0xb6, 0xfa, 0x66, 0x6c, 0xb7, 0xf2, 0x97,
	0x10, 0xed, 0x6b, 0x5b, 0x95, 0xe7, 0xd4, 0x56, 0x46, 0x17, 0x47, 0xf6, 0xb7, 0x49, 0x18, 0x70,
	0x22, 0x46, 0x8e, 0x6f, 0x11, 0xaf, 0x9e, 0xc1, 0xc4, 0x65, 0xa4, 0xe5, 0xa5, 0xd2, 0x65, 0x21,
	0xf3, 0x15, 0x85, 0xa9, 0x7f, 0x2a, 0x57, 0xf6, 0x39, 0xc0, 0xe7, 0x90, 0xfc, 0x0f, 0x00, 0x00,
	0xff, 0xff, 0xdd, 0x2b, 0xe2, 0xe6, 0xae, 0x02, 0x00, 0x00,
}
