// Code generated by protoc-gen-go. DO NOT EDIT.
// source: address_map.proto

package atlas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// AddressMap describes map of address lists
type AddressMap struct {
	// Types that are valid to be assigned to DomainOptional:
	//	*AddressMap_Domain
	DomainOptional       isAddressMap_DomainOptional `protobuf_oneof:"domain_optional"`
	Map                  map[string]*AddressList     `protobuf:"bytes,200,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AddressMap) Reset()      { *m = AddressMap{} }
func (*AddressMap) ProtoMessage() {}
func (*AddressMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e5ab1e767171519, []int{0}
}

func (m *AddressMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressMap.Unmarshal(m, b)
}
func (m *AddressMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressMap.Marshal(b, m, deterministic)
}
func (m *AddressMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressMap.Merge(m, src)
}
func (m *AddressMap) XXX_Size() int {
	return xxx_messageInfo_AddressMap.Size(m)
}
func (m *AddressMap) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressMap.DiscardUnknown(m)
}

var xxx_messageInfo_AddressMap proto.InternalMessageInfo

type isAddressMap_DomainOptional interface {
	isAddressMap_DomainOptional()
}

type AddressMap_Domain struct {
	Domain *Domain `protobuf:"bytes,100,opt,name=domain,proto3,oneof"`
}

func (*AddressMap_Domain) isAddressMap_DomainOptional() {}

func (m *AddressMap) GetDomainOptional() isAddressMap_DomainOptional {
	if m != nil {
		return m.DomainOptional
	}
	return nil
}

func (m *AddressMap) GetDomain() *Domain {
	if x, ok := m.GetDomainOptional().(*AddressMap_Domain); ok {
		return x.Domain
	}
	return nil
}

func (m *AddressMap) GetMap() map[string]*AddressList {
	if m != nil {
		return m.Map
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AddressMap) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AddressMap_Domain)(nil),
	}
}

func init() {
	proto.RegisterType((*AddressMap)(nil), "atlas.AddressMap")
	proto.RegisterMapType((map[string]*AddressList)(nil), "atlas.AddressMap.MapEntry")
}

func init() { proto.RegisterFile("address_map.proto", fileDescriptor_1e5ab1e767171519) }

var fileDescriptor_1e5ab1e767171519 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x4c, 0x49, 0x29,
	0x4a, 0x2d, 0x2e, 0x8e, 0xcf, 0x4d, 0x2c, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d,
	0x2c, 0xc9, 0x49, 0x2c, 0x96, 0x12, 0x82, 0xc9, 0xe4, 0x64, 0x16, 0x97, 0x40, 0xa4, 0xa4, 0x78,
	0x52, 0xf2, 0x73, 0x13, 0x33, 0xf3, 0x20, 0x3c, 0xa5, 0xc3, 0x8c, 0x5c, 0x5c, 0x8e, 0x10, 0x45,
	0xbe, 0x89, 0x05, 0x42, 0xea, 0x5c, 0x6c, 0x10, 0x69, 0x89, 0x14, 0x05, 0x46, 0x0d, 0x6e, 0x23,
	0x5e, 0x3d, 0xb0, 0x41, 0x7a, 0x2e, 0x60, 0x41, 0x0f, 0x86, 0x20, 0xa8, 0xb4, 0x90, 0x2e, 0x17,
	0x73, 0x6e, 0x62, 0x81, 0xc4, 0x09, 0x46, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x29, 0xa8, 0x32, 0x84,
	0x49, 0x7a, 0xbe, 0x89, 0x05, 0xae, 0x79, 0x25, 0x45, 0x95, 0x41, 0x20, 0x75, 0x52, 0x5e, 0x5c,
	0x1c, 0x30, 0x01, 0x21, 0x01, 0x2e, 0xe6, 0xec, 0xd4, 0x4a, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce,
	0x20, 0x10, 0x53, 0x48, 0x83, 0x8b, 0xb5, 0x2c, 0x31, 0xa7, 0x34, 0x55, 0x82, 0x09, 0x6c, 0xa9,
	0x10, 0xaa, 0x69, 0x3e, 0x99, 0xc5, 0x25, 0x41, 0x10, 0x05, 0x56, 0x4c, 0x16, 0x8c, 0x4e, 0x82,
	0x5c, 0xfc, 0x10, 0x47, 0xc4, 0xe7, 0x17, 0x94, 0x64, 0xe6, 0xe7, 0x25, 0xe6, 0x24, 0xb1, 0x81,
	0x3d, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xb6, 0x48, 0xd8, 0x0a, 0x01, 0x00, 0x00,
}
