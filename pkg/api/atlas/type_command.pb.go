// Code generated by protoc-gen-go. DO NOT EDIT.
// source: type_command.proto

package atlas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandType int32

const (
	// Due to first enum value has to be zero in proto3
	CommandType_COMMAND_RESERVED         CommandType = 0
	CommandType_COMMAND_UNSPECIFIED      CommandType = 100
	CommandType_COMMAND_ECHO_REQUEST     CommandType = 200
	CommandType_COMMAND_ECHO_REPLY       CommandType = 300
	CommandType_COMMAND_CONFIG_REQUEST   CommandType = 400
	CommandType_COMMAND_CONFIG           CommandType = 500
	CommandType_COMMAND_METRICS_SCHEDULE CommandType = 600
	CommandType_COMMAND_METRICS_REQUEST  CommandType = 700
	CommandType_COMMAND_METRICS          CommandType = 800
	CommandType_COMMAND_DATA_SCHEDULE    CommandType = 900
	CommandType_COMMAND_DATA_REQUEST     CommandType = 1000
	CommandType_COMMAND_DATA             CommandType = 1100
	CommandType_COMMAND_ADDRESS          CommandType = 1200
)

var CommandType_name = map[int32]string{
	0:    "COMMAND_RESERVED",
	100:  "COMMAND_UNSPECIFIED",
	200:  "COMMAND_ECHO_REQUEST",
	300:  "COMMAND_ECHO_REPLY",
	400:  "COMMAND_CONFIG_REQUEST",
	500:  "COMMAND_CONFIG",
	600:  "COMMAND_METRICS_SCHEDULE",
	700:  "COMMAND_METRICS_REQUEST",
	800:  "COMMAND_METRICS",
	900:  "COMMAND_DATA_SCHEDULE",
	1000: "COMMAND_DATA_REQUEST",
	1100: "COMMAND_DATA",
	1200: "COMMAND_ADDRESS",
}

var CommandType_value = map[string]int32{
	"COMMAND_RESERVED":         0,
	"COMMAND_UNSPECIFIED":      100,
	"COMMAND_ECHO_REQUEST":     200,
	"COMMAND_ECHO_REPLY":       300,
	"COMMAND_CONFIG_REQUEST":   400,
	"COMMAND_CONFIG":           500,
	"COMMAND_METRICS_SCHEDULE": 600,
	"COMMAND_METRICS_REQUEST":  700,
	"COMMAND_METRICS":          800,
	"COMMAND_DATA_SCHEDULE":    900,
	"COMMAND_DATA_REQUEST":     1000,
	"COMMAND_DATA":             1100,
	"COMMAND_ADDRESS":          1200,
}

func (x CommandType) String() string {
	return proto.EnumName(CommandType_name, int32(x))
}

func (CommandType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e84d1630985fc0a4, []int{0}
}

type Command struct {
	Header *Metadata `protobuf:"bytes,100,opt,name=header,proto3" json:"header,omitempty"`
	// May contain any arbitrary sequence of bytes no longer than 2^32
	Bytes                []byte       `protobuf:"bytes,200,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Addresses            []*S3Address `protobuf:"bytes,700,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_e84d1630985fc0a4, []int{0}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetHeader() *Metadata {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Command) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func (m *Command) GetAddresses() []*S3Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func init() {
	proto.RegisterEnum("atlas.CommandType", CommandType_name, CommandType_value)
	proto.RegisterType((*Command)(nil), "atlas.Command")
}

func init() { proto.RegisterFile("type_command.proto", fileDescriptor_e84d1630985fc0a4) }

var fileDescriptor_e84d1630985fc0a4 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xd1, 0x4f, 0x4e, 0xc2, 0x40,
	0x14, 0xc7, 0x71, 0x0b, 0x16, 0xe4, 0x41, 0x64, 0x7c, 0x80, 0x54, 0xd4, 0x84, 0xb8, 0x91, 0xb8,
	0xc0, 0x04, 0x4e, 0xd0, 0xb4, 0x83, 0x34, 0xa1, 0x80, 0x33, 0xc5, 0xc4, 0x55, 0x33, 0xd8, 0x49,
	0x5c, 0x88, 0x10, 0xda, 0x0d, 0xae, 0x3d, 0x80, 0x47, 0xf0, 0x00, 0x2e, 0x3c, 0x00, 0x07, 0x60,
	0xe1, 0xd6, 0xc4, 0x23, 0x78, 0x00, 0x0f, 0x60, 0xd2, 0x3f, 0x82, 0x2c, 0xfb, 0xfb, 0xb4, 0xdf,
	0x66, 0x32, 0x80, 0xc1, 0x62, 0x26, 0xdd, 0xbb, 0xe9, 0x64, 0x22, 0x1e, 0xbd, 0xe6, 0x6c, 0x3e,
	0x0d, 0xa6, 0xa8, 0x8a, 0xe0, 0x41, 0xf8, 0xb5, 0x52, 0x48, 0x13, 0x19, 0x08, 0x4f, 0x04, 0x22,
	0xb2, 0x5a, 0x25, 0x1c, 0xfd, 0xb6, 0x2b, 0x3c, 0x6f, 0x2e, 0x7d, 0x3f, 0x9a, 0xcf, 0x9e, 0x20,
	0x6b, 0x44, 0x0d, 0x3c, 0x87, 0xcc, 0xbd, 0x14, 0x9e, 0x9c, 0x6b, 0x5e, 0x5d, 0x69, 0xe4, 0x5b,
	0xc5, 0x66, 0x98, 0x6b, 0xda, 0x71, 0x88, 0xc5, 0x8c, 0x15, 0x50, 0xc7, 0x8b, 0x40, 0xfa, 0xda,
	0x4a, 0xa9, 0x2b, 0x8d, 0x02, 0x8b, 0x9e, 0xf0, 0x12, 0x72, 0x71, 0x5b, 0xfa, 0xda, 0x52, 0xad,
	0xa7, 0x1b, 0xf9, 0x16, 0x89, 0x1b, 0xbc, 0xad, 0x47, 0xc4, 0xd6, 0xef, 0x5c, 0x7c, 0xa6, 0x20,
	0x1f, 0xff, 0xdc, 0x59, 0xcc, 0x24, 0x96, 0x81, 0x18, 0x03, 0xdb, 0xd6, 0xfb, 0xa6, 0xcb, 0x28,
	0xa7, 0xec, 0x86, 0x9a, 0x64, 0x07, 0xab, 0x50, 0x4a, 0xd6, 0x51, 0x9f, 0x0f, 0xa9, 0x61, 0x75,
	0x2c, 0x6a, 0x12, 0x0f, 0x8f, 0xa0, 0x9c, 0x00, 0x35, 0xba, 0x03, 0x97, 0xd1, 0xeb, 0x11, 0xe5,
	0x0e, 0x59, 0x29, 0x58, 0x05, 0xdc, 0xa2, 0x61, 0xef, 0x96, 0xbc, 0xa5, 0xf0, 0x18, 0x0e, 0x13,
	0x30, 0x06, 0xfd, 0x8e, 0x75, 0xf5, 0xf7, 0xd5, 0x4b, 0x1a, 0x4b, 0xb0, 0xff, 0x1f, 0xc9, 0x4f,
	0x1a, 0x4f, 0x41, 0x4b, 0x46, 0x9b, 0x3a, 0xcc, 0x32, 0xb8, 0xcb, 0x8d, 0x2e, 0x35, 0x47, 0x3d,
	0x4a, 0xbe, 0x76, 0xf1, 0x04, 0xaa, 0xdb, 0x9c, 0x14, 0x97, 0x2a, 0x96, 0xa1, 0xb8, 0xa5, 0xe4,
	0x35, 0x83, 0x35, 0xa8, 0x24, 0xab, 0xa9, 0x3b, 0xfa, 0xba, 0xf7, 0x9c, 0xdd, 0x3c, 0x54, 0x68,
	0x49, 0xec, 0x3b, 0x8b, 0x07, 0x50, 0xd8, 0x24, 0xf2, 0xb1, 0xb7, 0xd9, 0xd7, 0x4d, 0x93, 0x51,
	0xce, 0xc9, 0x7b, 0x6e, 0x9c, 0x09, 0xaf, 0xb6, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x74,
	0x13, 0xd9, 0x23, 0x02, 0x00, 0x00,
}
