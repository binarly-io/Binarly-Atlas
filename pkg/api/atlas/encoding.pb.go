// Code generated by protoc-gen-go. DO NOT EDIT.
// source: encoding.proto

package atlas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Encoding describes encoding of the object
type Encoding struct {
	Method               string   `protobuf:"bytes,100,opt,name=method,proto3" json:"method,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Encoding) Reset()      { *m = Encoding{} }
func (*Encoding) ProtoMessage() {}
func (*Encoding) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac330e3fa468db3c, []int{0}
}

func (m *Encoding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Encoding.Unmarshal(m, b)
}
func (m *Encoding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Encoding.Marshal(b, m, deterministic)
}
func (m *Encoding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Encoding.Merge(m, src)
}
func (m *Encoding) XXX_Size() int {
	return xxx_messageInfo_Encoding.Size(m)
}
func (m *Encoding) XXX_DiscardUnknown() {
	xxx_messageInfo_Encoding.DiscardUnknown(m)
}

var xxx_messageInfo_Encoding proto.InternalMessageInfo

func (m *Encoding) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func init() {
	proto.RegisterType((*Encoding)(nil), "atlas.Encoding")
}

func init() { proto.RegisterFile("encoding.proto", fileDescriptor_ac330e3fa468db3c) }

var fileDescriptor_ac330e3fa468db3c = []byte{
	// 78 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xcd, 0x4b, 0xce,
	0x4f, 0xc9, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0x2c, 0xc9, 0x49,
	0x2c, 0x56, 0x52, 0xe2, 0xe2, 0x70, 0x85, 0x4a, 0x08, 0x89, 0x71, 0xb1, 0xe5, 0xa6, 0x96, 0x64,
	0xe4, 0xa7, 0x48, 0xa4, 0x28, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x79, 0x49, 0x6c, 0x60, 0x1d, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x26, 0x67, 0x85, 0x55, 0x43, 0x00, 0x00, 0x00,
}
