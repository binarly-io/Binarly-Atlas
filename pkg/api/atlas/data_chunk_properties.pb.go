// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data_chunk_properties.proto

package atlas

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataChunkProperties struct {
	// Types that are valid to be assigned to DigestOptional:
	//	*DataChunkProperties_Digest
	DigestOptional isDataChunkProperties_DigestOptional `protobuf_oneof:"digest_optional"`
	// Types that are valid to be assigned to LenOptional:
	//	*DataChunkProperties_Len
	LenOptional isDataChunkProperties_LenOptional `protobuf_oneof:"len_optional"`
	// Types that are valid to be assigned to OffsetOptional:
	//	*DataChunkProperties_Offset
	OffsetOptional isDataChunkProperties_OffsetOptional `protobuf_oneof:"offset_optional"`
	// Types that are valid to be assigned to LastOptional:
	//	*DataChunkProperties_Last
	LastOptional         isDataChunkProperties_LastOptional `protobuf_oneof:"last_optional"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *DataChunkProperties) Reset()      { *m = DataChunkProperties{} }
func (*DataChunkProperties) ProtoMessage() {}
func (*DataChunkProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_c58aa4f8a8b62219, []int{0}
}

func (m *DataChunkProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataChunkProperties.Unmarshal(m, b)
}
func (m *DataChunkProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataChunkProperties.Marshal(b, m, deterministic)
}
func (m *DataChunkProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataChunkProperties.Merge(m, src)
}
func (m *DataChunkProperties) XXX_Size() int {
	return xxx_messageInfo_DataChunkProperties.Size(m)
}
func (m *DataChunkProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_DataChunkProperties.DiscardUnknown(m)
}

var xxx_messageInfo_DataChunkProperties proto.InternalMessageInfo

type isDataChunkProperties_DigestOptional interface {
	isDataChunkProperties_DigestOptional()
}

type DataChunkProperties_Digest struct {
	Digest *Digest `protobuf:"bytes,100,opt,name=digest,proto3,oneof"`
}

func (*DataChunkProperties_Digest) isDataChunkProperties_DigestOptional() {}

func (m *DataChunkProperties) GetDigestOptional() isDataChunkProperties_DigestOptional {
	if m != nil {
		return m.DigestOptional
	}
	return nil
}

func (m *DataChunkProperties) GetDigest() *Digest {
	if x, ok := m.GetDigestOptional().(*DataChunkProperties_Digest); ok {
		return x.Digest
	}
	return nil
}

type isDataChunkProperties_LenOptional interface {
	isDataChunkProperties_LenOptional()
}

type DataChunkProperties_Len struct {
	Len int64 `protobuf:"varint,200,opt,name=len,proto3,oneof"`
}

func (*DataChunkProperties_Len) isDataChunkProperties_LenOptional() {}

func (m *DataChunkProperties) GetLenOptional() isDataChunkProperties_LenOptional {
	if m != nil {
		return m.LenOptional
	}
	return nil
}

func (m *DataChunkProperties) GetLen() int64 {
	if x, ok := m.GetLenOptional().(*DataChunkProperties_Len); ok {
		return x.Len
	}
	return 0
}

type isDataChunkProperties_OffsetOptional interface {
	isDataChunkProperties_OffsetOptional()
}

type DataChunkProperties_Offset struct {
	Offset int64 `protobuf:"varint,300,opt,name=offset,proto3,oneof"`
}

func (*DataChunkProperties_Offset) isDataChunkProperties_OffsetOptional() {}

func (m *DataChunkProperties) GetOffsetOptional() isDataChunkProperties_OffsetOptional {
	if m != nil {
		return m.OffsetOptional
	}
	return nil
}

func (m *DataChunkProperties) GetOffset() int64 {
	if x, ok := m.GetOffsetOptional().(*DataChunkProperties_Offset); ok {
		return x.Offset
	}
	return 0
}

type isDataChunkProperties_LastOptional interface {
	isDataChunkProperties_LastOptional()
}

type DataChunkProperties_Last struct {
	Last bool `protobuf:"varint,400,opt,name=last,proto3,oneof"`
}

func (*DataChunkProperties_Last) isDataChunkProperties_LastOptional() {}

func (m *DataChunkProperties) GetLastOptional() isDataChunkProperties_LastOptional {
	if m != nil {
		return m.LastOptional
	}
	return nil
}

func (m *DataChunkProperties) GetLast() bool {
	if x, ok := m.GetLastOptional().(*DataChunkProperties_Last); ok {
		return x.Last
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DataChunkProperties) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DataChunkProperties_Digest)(nil),
		(*DataChunkProperties_Len)(nil),
		(*DataChunkProperties_Offset)(nil),
		(*DataChunkProperties_Last)(nil),
	}
}

func init() {
	proto.RegisterType((*DataChunkProperties)(nil), "atlas.DataChunkProperties")
}

func init() { proto.RegisterFile("data_chunk_properties.proto", fileDescriptor_c58aa4f8a8b62219) }

var fileDescriptor_c58aa4f8a8b62219 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x49, 0x2c, 0x49,
	0x8c, 0x4f, 0xce, 0x28, 0xcd, 0xcb, 0x8e, 0x2f, 0x28, 0xca, 0x2f, 0x48, 0x2d, 0x2a, 0xc9, 0x4c,
	0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0x2c, 0xc9, 0x49, 0x2c, 0x96, 0xe2,
	0x49, 0xc9, 0x4c, 0x4f, 0x2d, 0x2e, 0x81, 0x08, 0x2a, 0x9d, 0x61, 0xe4, 0x12, 0x76, 0x49, 0x2c,
	0x49, 0x74, 0x06, 0xe9, 0x09, 0x80, 0x6b, 0x11, 0x52, 0xe7, 0x62, 0x83, 0xa8, 0x93, 0x48, 0x51,
	0x60, 0xd4, 0xe0, 0x36, 0xe2, 0xd5, 0x03, 0xeb, 0xd6, 0x73, 0x01, 0x0b, 0x7a, 0x30, 0x04, 0x41,
	0xa5, 0x85, 0x84, 0xb9, 0x98, 0x73, 0x52, 0xf3, 0x24, 0x4e, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x7b,
	0x30, 0x06, 0x81, 0x78, 0x42, 0x92, 0x5c, 0x6c, 0xf9, 0x69, 0x69, 0xc5, 0xa9, 0x25, 0x12, 0x6b,
	0x98, 0xc0, 0xe2, 0x4c, 0x41, 0x50, 0x01, 0x21, 0x51, 0x2e, 0x96, 0x9c, 0xc4, 0xe2, 0x12, 0x89,
	0x09, 0xcc, 0x0a, 0x8c, 0x1a, 0x1c, 0x1e, 0xcc, 0x41, 0x60, 0xae, 0x93, 0x20, 0x17, 0x3f, 0xc4,
	0xc0, 0xf8, 0xfc, 0x82, 0x92, 0xcc, 0xfc, 0xbc, 0xc4, 0x1c, 0x27, 0x3e, 0x2e, 0x9e, 0x9c, 0xd4,
	0x3c, 0x04, 0x5f, 0x90, 0x8b, 0x1f, 0x62, 0x06, 0x42, 0x88, 0x9f, 0x8b, 0x17, 0xa4, 0x1b, 0x2e,
	0x90, 0xc4, 0x06, 0xf6, 0x95, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xd5, 0x69, 0xa7, 0x09,
	0x01, 0x00, 0x00,
}
